---
import './contact.css';
import PrivacyModal from '../privacy/PrivacyModal.astro';
---

<section
  id="contacto" 
  class="bg-gradient-to-br from-gray-900 via-blue-900/20 to-gray-900 text-white py-20 px-6 min-h-screen flex items-center"
>
  <div class="max-w-7xl mx-auto w-full">
    
    <!-- Título de la sección -->
    <div class="text-center mb-16">
      <h2 class="text-4xl lg:text-5xl font-bold mb-4 bg-gradient-to-r from-blue-400 via-purple-500 to-cyan-400 bg-clip-text text-transparent">
        Contáctame
      </h2>
      <p class="text-xl text-gray-300 max-w-2xl mx-auto">
        ¿Tienes un proyecto en mente? ¡Me encantaría escucharte y trabajar juntos!
      </p>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-start">
      
      <!-- Información de contacto -->
      <div class="space-y-8">
        <div class="contact-info-card">
          <h3 class="text-2xl font-bold mb-6 text-blue-400">Información de Contacto</h3>
          
          <div class="space-y-6">
            <!-- Email -->
            <div class="contact-item" data-contact="email">
              <div class="contact-icon email-icon">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 3.26a2 2 0 001.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                </svg>
              </div>
              <div>
                <p class="text-gray-400 text-sm">Email</p>
                <a href="mailto:josue.dev@ejemplo.com" class="text-white hover:text-blue-400 transition-colors duration-300">
                  josue.dev@ejemplo.com
                </a>
              </div>
            </div>

            <!-- WhatsApp -->
            <!-- <div class="contact-item" data-contact="whatsapp">
              <div class="contact-icon whatsapp-icon">
                <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.485 3.515"/>
                </svg>
              </div>
              <div>
                <p class="text-gray-400 text-sm">WhatsApp</p>
                <a href="https://wa.me/1234567890" target="_blank" class="text-white hover:text-green-400 transition-colors duration-300">
                  +1 (234) 567-8900
                </a>
              </div>
            </div> -->

            <!-- LinkedIn -->
            <div class="contact-item" data-contact="linkedin">
              <div class="contact-icon linkedin-icon">
                <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                </svg>
              </div>
              <div>
                <p class="text-gray-400 text-sm">LinkedIn</p>
                <a href="https://linkedin.com/in/josuedev" target="_blank" class="text-white hover:text-blue-500 transition-colors duration-300">
                  /in/josuedev
                </a>
              </div>
            </div>

            <!-- GitHub -->
            <div class="contact-item" data-contact="github">
              <div class="contact-icon github-icon">
                <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                </svg>
              </div>
              <div>
                <p class="text-gray-400 text-sm">GitHub</p>
                <a href="https://github.com/josuedev" target="_blank" class="text-white hover:text-gray-300 transition-colors duration-300">
                  /josuedev
                </a>
              </div>
            </div>
          </div>
        </div>

        <!-- Disponibilidad -->
        <div class="availability-card">
          <div class="status-indicator">
            <div class="status-dot"></div>
            <span class="text-green-400 font-semibold">Disponible para proyectos</span>
          </div>
          <p class="text-gray-400 mt-2">
            Tiempo de respuesta promedio: <span class="text-white">24 horas</span>
          </p>
        </div>
      </div>

      <!-- Formulario de contacto -->
      <div class="contact-form-container">
        <form id="contact-form" class="space-y-6">
          
          <!-- Fila 1: Nombre y Email -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="input-group">
              <label for="name" class="input-label">Nombre completo *</label>
              <input 
                type="text" 
                id="name" 
                name="name" 
                required 
                class="contact-input"
                placeholder="Tu nombre completo"
              >
              <div class="input-border"></div>
            </div>
            
            <div class="input-group">
              <label for="email" class="input-label">Email *</label>
              <input 
                type="email" 
                id="email" 
                name="email" 
                required 
                class="contact-input"
                placeholder="tu@email.com"
              >
              <div class="input-border"></div>
            </div>
          </div>

          <!-- Fila 2: Empresa y Teléfono -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="input-group">
              <label for="company" class="input-label">Empresa / Organización</label>
              <input 
                type="text" 
                id="company" 
                name="company" 
                class="contact-input"
                placeholder="Tu empresa (opcional)"
              >
              <div class="input-border"></div>
            </div>
            
            <div class="input-group">
              <label for="phone" class="input-label">Teléfono</label>
              <input 
                type="tel" 
                id="phone" 
                name="phone" 
                class="contact-input"
                placeholder="+1 (234) 567-8900 (opcional)"
              >
              <div class="input-border"></div>
            </div>
          </div>

          <!-- Tipo de proyecto -->
          <div class="input-group">
            <label for="project-type" class="input-label">Tipo de proyecto *</label>
            <select id="project-type" name="project-type" required class="contact-input">
              <option value="">Selecciona el tipo de proyecto</option>
               <option value="web-app">Sistema de Gestión</option>
              <option value="landing">Landing Page</option>
              <option value="ecommerce">E-commerce</option>
              <option value="portfolio">Portafolio</option>
              <option value="mobile">App Móvil</option>
              <option value="other">Otro</option>
            </select>
            <div class="input-border"></div>
          </div>

          <!-- Presupuesto -->
          <div class="input-group">
            <label for="budget" class="input-label">Presupuesto estimado *</label>
            <select id="budget" name="budget" required class="contact-input">
              <option value="">Selecciona tu presupuesto</option>
              <option value="500-1000">$500 - $1,000 USD</option>
              <option value="1000-3000">$1,000 - $3,000 USD</option>
              <option value="3000-5000">$3,000 - $5,000 USD</option>
              <option value="5000-10000">$5,000 - $10,000 USD</option>
              <option value="10000+">$10,000+ USD</option>
              <option value="discuss">Prefiero discutirlo</option>
            </select>
            <div class="input-border"></div>
          </div>

          <!-- Timeline -->
          <div class="input-group">
            <label for="timeline" class="input-label">¿Cuándo necesitas el proyecto? *</label>
            <select id="timeline" name="timeline" required class="contact-input">
              <option value="">Selecciona el timeline</option>
              <option value="asap">Lo antes posible</option>
              <option value="1-month">En 1 mes</option>
              <option value="2-3-months">En 2-3 meses</option>
              <option value="flexible">Soy flexible con los tiempos</option>
              <option value="planning">Solo estoy planificando</option>
            </select>
            <div class="input-border"></div>
          </div>

          <!-- Mensaje -->
          <div class="input-group">
            <label for="message" class="input-label">Cuéntame sobre tu proyecto *</label>
            <textarea 
              id="message" 
              name="message" 
              required 
              rows="6"
              class="contact-input contact-textarea"
              placeholder="Describe tu idea, objetivos, funcionalidades que necesitas, referencias que te gustan, o cualquier detalle que consideres importante..."
            ></textarea>
            <div class="input-border"></div>
          </div>

          <!-- Checkbox de términos -->
          <div class="input-group">
            <label class="flex items-start gap-3 text-sm text-gray-300 cursor-pointer">
              <input type="checkbox" id="terms" name="terms" required class="mt-1 w-4 h-4 text-blue-600 bg-gray-700 border-gray-600 rounded focus:ring-blue-500 focus:ring-2">
              <span>
                Acepto que mis datos sean utilizados para responder a mi consulta. 
                <a href="/privacy" class="text-blue-400 hover:text-blue-300 underline">Política de privacidad</a>
              </span>
            </label>
          </div>

          <div class="form-actions">
            <button type="submit" id="submit-btn" class="submit-button">
              <span class="btn-text">Enviar Mensaje</span>
              <svg class="btn-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"/>
              </svg>
            </button>
          </div>
        </form>

        <!-- Mensaje de éxito -->
        <div id="success-message" class="success-message hidden">
          <div class="success-icon">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
            </svg>
          </div>
          <div>
            <h4 class="text-green-400 font-semibold">¡Mensaje enviado exitosamente!</h4>
            <p class="text-gray-300 text-sm">Te responderé dentro de las próximas 24 horas. También recibirás un email de confirmación. ¡Gracias por contactarme!</p>
          </div>
        </div>

        <!-- Mensaje de error -->
        <div id="error-message" class="error-message hidden">
          <div class="error-icon">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
            </svg>
          </div>
          <div>
            <h4 class="text-red-400 font-semibold">Error al enviar el mensaje</h4>
            <p class="text-gray-300 text-sm">Hubo un problema al enviar tu mensaje. Por favor, inténtalo de nuevo o contáctame directamente por email.</p>
          </div>
        </div>
      </div>
    </div>

  </div>
</section>

<script>
  // 🎯 CONTACT FORM CONTROL
  document.addEventListener('DOMContentLoaded', function() {
    console.log('🚀 Contact section cargado');
    
    const form = document.getElementById('contact-form') as HTMLFormElement;
    const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;
    const successMessage = document.getElementById('success-message') as HTMLElement;
    const errorMessage = document.getElementById('error-message') as HTMLElement;

    // Animaciones de entrada
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          if (entry.target.classList.contains('contact-item')) {
            entry.target.classList.add('animate-in');
          }
          if (entry.target.classList.contains('input-group')) {
            setTimeout(() => {
              entry.target.classList.add('animate-in');
            }, Math.random() * 200);
          }
        }
      });
    }, observerOptions);

    // Observar elementos
    document.querySelectorAll('.contact-item, .input-group').forEach(el => {
      observer.observe(el);
    });

    // Efectos de focus en inputs
    document.querySelectorAll('.contact-input').forEach(input => {
      input.addEventListener('focus', function(this: HTMLInputElement) {
        const inputGroup = this.closest('.input-group');
        if (inputGroup) {
          inputGroup.classList.add('focused');
        }
      });

      input.addEventListener('blur', function(this: HTMLInputElement) {
        const inputGroup = this.closest('.input-group');
        if (inputGroup) {
          inputGroup.classList.remove('focused');
          if (this.value.trim() !== '') {
            inputGroup.classList.add('filled');
          } else {
            inputGroup.classList.remove('filled');
          }
        }
      });

      // Input validation functions
    const nameInput = document.getElementById('name');
    const companyInput = document.getElementById('company');
    const phoneInput = document.getElementById('phone');
    const messageTextarea = document.getElementById('message');
    
    // Función para validar solo texto (letras, acentos, espacios)
    const validateTextOnly = (e:any) => {
      e.target.value = e.target.value.replace(/[^A-Za-zÁÉÍÓÚáéíóúÑñ\s]/g, '');
    };
    
    // Función para validar teléfonos (números, espacios, guiones, paréntesis, +)
    const validatePhoneOnly = (e:any) => {
      e.target.value = e.target.value.replace(/[^0-9\s\-\(\)\+]/g, '');
    };
    
    // Función para validar textarea (letras, números, acentos, espacios, puntos, comas)
    const validateMessageText = (e:any) => {
      e.target.value = e.target.value.replace(/[^A-Za-z0-9ÁÉÍÓÚáéíóúÑñ\s\.\,]/g, '');
    };
    
    // Aplicar validaciones a campos específicos
    if (nameInput) {
      nameInput.addEventListener('input', validateTextOnly);
    }
    if (companyInput) {
      companyInput.addEventListener('input', validateTextOnly);
    }
    if (phoneInput) {
      phoneInput.addEventListener('input', validatePhoneOnly);
    }
    if (messageTextarea) {
      messageTextarea.addEventListener('input', validateMessageText);
    }


      // Validación en tiempo real
      input.addEventListener('input', function(this: HTMLInputElement) {
        const inputGroup = this.closest('.input-group');
        if (inputGroup) {
          if (this.checkValidity()) {
            inputGroup.classList.remove('error');
            inputGroup.classList.add('valid');
          } else {
            inputGroup.classList.remove('valid');
            inputGroup.classList.add('error');
          }
        }
      });
    });

    // Manejo del formulario
    if (form) {
      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Validate required fields
        const requiredFields = form.querySelectorAll('[required]');
        let isValid = true;
        
        requiredFields.forEach(field => {
          if (!(field as HTMLInputElement).value.trim()) {
            const inputGroup = field.closest('.input-group');
            if (inputGroup) {
              inputGroup.classList.add('error');
            }
            isValid = false;
          }
        });

        if (!isValid) {
          showError('Por favor, completa todos los campos requeridos.');
          return;
        }

        // Cambiar estado del botón
        submitBtn.classList.add('loading');
        submitBtn.disabled = true;

        try {
          // Collect form data
          const formData = new FormData(form);
          const data = {
            name: formData.get('name'),
            email: formData.get('email'),
            company: formData.get('company'),
            phone: formData.get('phone'),
            projectType: formData.get('project-type'),
            budget: formData.get('budget'),
            timeline: formData.get('timeline'),
            message: formData.get('message'),
            terms: formData.get('terms') ? true : false
          };

          // Send to API
          const response = await fetch('/api/send-email', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
          });

          const result = await response.json();

          if (response.ok && result.success) {
            showSuccess();
            form.reset();
            
            // Limpiar clases de validación
            document.querySelectorAll('.input-group').forEach(group => {
              group.classList.remove('filled', 'valid', 'error');
            });
          } else {
            showError(result.message || 'Error al enviar el mensaje. Por favor, inténtalo nuevamente.');
          }
          
        } catch (error) {
          console.error('Error:', error);
          showError('Error de conexión. Verifica tu conexión a internet e inténtalo nuevamente.');
        } finally {
          submitBtn.classList.remove('loading');
          submitBtn.disabled = false;
        }
      });
    }



    // Mostrar mensaje de éxito
    function showSuccess() {
      hideMessages();
      successMessage.classList.remove('hidden');
      successMessage.classList.add('show');
      
      setTimeout(() => {
        successMessage.classList.remove('show');
        setTimeout(() => {
          successMessage.classList.add('hidden');
        }, 300);
      }, 5000);
    }

    // Mostrar mensaje de error
    function showError(message: string) {
      hideMessages();
      const errorText = errorMessage.querySelector('p');
      if (errorText) {
        errorText.textContent = message;
      }
      errorMessage.classList.remove('hidden');
      errorMessage.classList.add('show');
      
      setTimeout(() => {
        errorMessage.classList.remove('show');
        setTimeout(() => {
          errorMessage.classList.add('hidden');
        }, 300);
      }, 5000);
    }

    // Ocultar mensajes
    function hideMessages() {
      successMessage.classList.remove('show');
      errorMessage.classList.remove('show');
    }

    console.log('✅ Contact form inicializado');
  });
</script>

<!-- <PrivacyModal /> -->