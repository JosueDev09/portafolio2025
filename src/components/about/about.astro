---
import './about.css';
---

<section   
  id="sobre-mi"
  class="section w-full relative z-[1] text-white flex items-center justify-center p-6 min-h-screen 
         bg-gradient-to-b from-[#0f1628] to-[#0a2048] opacity-0 translate-y-12
         transition-all duration-[1200ms] ease-[cubic-bezier(0.25,0.8,0.25,1)] 
         will-change-transform will-change-opacity"
>
  <div id="about-content" class="max-w-6xl mx-auto w-full">
    <!-- Grid de 2 columnas: texto izquierda, imagen derecha -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-12 items-center">
      
      <!-- Columna de texto (izquierda) -->
      <div class="space-y-6 text-left lg:pr-8">
        <h1 class="text-4xl lg:text-5xl font-bold mb-6 bg-gradient-to-r from-blue-400 to-purple-500 bg-clip-text text-transparent">
          Sobre Mi
        </h1>
        <p class="text-lg lg:text-xl leading-relaxed text-gray-300">
          춰Hola! Soy <span class="text-blue-400 font-semibold">Josue Flores</span>, un desarrollador web apasionado por crear experiencias digitales atractivas y funcionales.
          Con experiencia en HTML, CSS, JavaScript y frameworks modernos como React y Vue, me especializo en construir
          sitios web responsivos y aplicaciones web din치micas.
        </p>
        <p class="text-lg lg:text-xl leading-relaxed text-gray-300">
          Me encanta aprender nuevas tecnolog칤as y mejorar mis habilidades constantemente. Disfruto trabajando en equipo
          y colaborando en proyectos que desaf칤an mis capacidades t칠cnicas.
        </p>
        <p class="text-lg lg:text-xl leading-relaxed text-gray-300">
          Cuando no estoy codificando, me gusta explorar la naturaleza, leer libros de tecnolog칤a y jugar videojuegos.
          Estoy emocionado por las oportunidades futuras y siempre abierto a nuevos desaf칤os en el mundo del desarrollo web.
        </p>
        
        <!-- Botones de acci칩n -->
        <div class="flex flex-wrap gap-4 mt-8">
          <a href="/contact" class="bg-blue-600 hover:bg-blue-700 px-6 py-3 rounded-lg font-semibold transition-colors duration-300">
            Cont치ctame
          </a>
          <a href="/services" class="border border-blue-400 hover:bg-blue-400/10 px-6 py-3 rounded-lg font-semibold transition-colors duration-300">
            Ver Proyectos
          </a>
        </div>
      </div>

      <!-- Columna de imagen (derecha) -->
      <div class="relative flex justify-center lg:justify-end">
        <div class="relative">
          <!-- Contenedor de la imagen con efectos -->
          <div class="relative z-10 overflow-hidden rounded-2xl shadow-2xl">
            <img 
              src="/assets/imgConvertidas/programacionProfile.webp" 
              alt="Josue - Desarrollador Web" 
              class=" w-80 h-96 lg:w-96 lg:h-[28rem] object-cover transition-transform duration-500 hover:scale-105"
            />
            <!-- Overlay con gradiente -->
            <div class="absolute inset-0 bg-gradient-to-t from-blue-900/20 to-transparent"></div>
          </div>
          
          <!-- Elementos decorativos de fondo -->
          <div class="absolute -top-4 -left-4 w-20 h-20 bg-blue-500/20 rounded-full blur-xl"></div>
          <div class="absolute -bottom-6 -right-6 w-32 h-32 bg-purple-500/20 rounded-full blur-xl"></div>
          <div class="absolute top-1/2 -right-8 w-16 h-16 bg-cyan-400/20 rounded-full blur-lg"></div>
        </div>
      </div>
      
    </div>
  </div>
</section>

<script>
  const content = document.getElementById("sobre-mi");

  // 游릭 Estado inicial (invisible y m치s abajo)
  if (content) {
    content.style.opacity = "0";
    content.style.transform = "translateY(80px)";
    content.style.transition = "opacity 1s ease-out, transform 1s ease-out";
  }

  // 游리 Detectar cuando el usuario hace scroll
  window.addEventListener("scroll", () => {
    if (!content) return;

    const rect = content.getBoundingClientRect(); // posici칩n del elemento
    const windowHeight = window.innerHeight;

    // Calcula cu치nto del elemento est치 visible
    const visible = 1 - rect.top / windowHeight;

    // Si est치 entrando en el viewport
    if (visible > 0.1 && visible <= 1) {
      const opacity = Math.min(visible * 1.5, 1); // aparece gradualmente
      const translateY = 80 * (1 - visible); // sube gradualmente

      content.style.opacity = opacity.toString();
      content.style.transform = `translateY(${translateY}px)`;
    }
  });
</script>

