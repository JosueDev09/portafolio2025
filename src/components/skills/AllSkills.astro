---
import { getCollection } from 'astro:content';
import './allSkills.css';

// Obtener todas las colecciones de skills
const backendSkills = await getCollection('backend-skills');
const frontendSkills = await getCollection('frontend-skills');
const toolsSkills = await getCollection('tools-skills');
---

<section id="skills" class="skills-section bg-gray-900 text-white py-20 px-6">
  <div class="max-w-7xl mx-auto">
    
    <!-- TÃ­tulo principal -->
    <div class="text-center mb-16">
      <h2 class="text-4xl lg:text-5xl font-bold mb-4 bg-gradient-to-r from-blue-400 via-purple-500 to-cyan-400 bg-clip-text text-transparent">
        Mis Habilidades
      </h2>
      <p class="text-xl text-gray-300 max-w-3xl mx-auto">
        TecnologÃ­as y herramientas que domino para crear experiencias digitales excepcionales
      </p>
    </div>

    <!-- Skills Categories -->
    <div class="skills-container space-y-16">
      
      <!-- Frontend Skills -->
      <div class="skill-category">
        <div class="category-header">
          <div class="category-icon frontend-icon">
            <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
            </svg>
          </div>
          <h3 class="category-title">Frontend Development</h3>
        </div>
        <div class="skills-grid">
          {frontendSkills.map((skill: any) => (
            <div class="skill-card" data-category="frontend">
              <div class="skill-icon">
                <img src={skill.data.img} alt={skill.data.title} />
              </div>
              <div class="skill-info">
                <h4 class="skill-name">{skill.data.title}</h4>
                <div class="skill-progress">
                  <div class="progress-bar">
                    <div class="progress-fill" style={`width: ${skill.data.level}`}></div>
                  </div>
                  <span class="skill-percentage">{skill.data.level}</span>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- Backend Skills -->
      <div class="skill-category">
        <div class="category-header">
          <div class="category-icon backend-icon">
            <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01"/>
            </svg>
          </div>
          <h3 class="category-title">Backend Development</h3>
        </div>
        <div class="skills-grid">
          {backendSkills.map((skill: any) => (
            <div class="skill-card" data-category="backend">
              <div class="skill-icon">
                <img src={skill.data.img} alt={skill.data.title} />
              </div>
              <div class="skill-info">
                <h4 class="skill-name">{skill.data.title}</h4>
                <div class="skill-progress">
                  <div class="progress-bar">
                    <div class="progress-fill" style={`width: ${skill.data.level}`}></div>
                  </div>
                  <span class="skill-percentage">{skill.data.level}</span>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- Tools & Technologies -->
      <div class="skill-category">
        <div class="category-header">
          <div class="category-icon tools-icon">
            <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
            </svg>
          </div>
          <h3 class="category-title">Tools & Technologies</h3>
        </div>
        <div class="skills-grid">
          {toolsSkills.map((skill:any) => (
            <div class="skill-card" data-category="tools">
              <div class="skill-icon">
                <img src={skill.data.img} alt={skill.data.title} />
              </div>
              <div class="skill-info">
                <h4 class="skill-name">{skill.data.title}</h4>
                <div class="skill-progress">
                  <div class="progress-bar">
                    <div class="progress-fill" style={`width: ${skill.data.level}`}></div>
                  </div>
                  <span class="skill-percentage">{skill.data.level}</span>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

    </div>

    <!-- Skills Summary -->
    <div class="skills-summary mt-16 text-center">
      <div class="summary-stats grid grid-cols-1 md:grid-cols-3 gap-8">
        <div class="stat-card">
          <div class="stat-number">{frontendSkills.length}</div>
          <div class="stat-label">Frontend Skills</div>
        </div>
        <div class="stat-card">
          <div class="stat-number">{backendSkills.length}</div>
          <div class="stat-label">Backend Skills</div>
        </div>
        <div class="stat-card">
          <div class="stat-number">{toolsSkills.length}</div>
          <div class="stat-label">Tools & Technologies</div>
        </div>
      </div>
    </div>

  </div>
</section>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function() {
    console.log('ðŸš€ Skills section loaded');
    
    // Animate skill bars on scroll
    const observerOptions = {
      threshold: 0.3,
      rootMargin: '0px 0px -50px 0px'
    };

    const skillObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const skillCard = entry.target;
          const progressFill = skillCard.querySelector('.progress-fill');
          
          if (progressFill) {
            // Animate progress bar
            setTimeout(() => {
              progressFill.style.transform = 'scaleX(1)';
            }, Math.random() * 300);
          }
          
          // Add entrance animation
          skillCard.classList.add('animate-in');
        }
      });
    }, observerOptions);

    // Observe all skill cards
    document.querySelectorAll('.skill-card').forEach(card => {
      skillObserver.observe(card);
    });

    // Add hover effects
    document.querySelectorAll('.skill-card').forEach(card => {
      card.addEventListener('mouseenter', function() {
        this.classList.add('hovered');
      });
      
      card.addEventListener('mouseleave', function() {
        this.classList.remove('hovered');
      });
    });

    console.log('âœ… Skills animations initialized');
  });
</script>